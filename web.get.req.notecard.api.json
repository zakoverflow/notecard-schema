{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/blues/notecard-schema/master/web.get.req.notecard.api.json",
    "title": "web.get Request Application Programming Interface (API) Schema",
    "description": "Performs a simple HTTP or HTTPS `GET` request against an external endpoint, and returns the response to the Notecard.",
    "type": "object",
    "version": "0.3.1",
    "apiVersion": "9.1.1",
    "skus": ["CELL", "CELL+WIFI", "WIFI"],
    "properties": {
        "route": {
            "description": "Alias for a Proxy Route in Notehub.",
            "type": "string"
        },
        "name": {
            "description": "A web URL endpoint relative to the host configured in the Proxy Route. URL parameters may be added to this argument as well (e.g. `/getLatest?id=1`).",
            "type": "string"
        },
        "body": {
            "description": "The JSON body to send with the request.",
            "type": "object"
        },
        "content": {
            "description": "The MIME type of the body or payload of the response. Default is `application/json`.",
            "type": "string"
        },
        "seconds": {
            "description": "If specified, overrides the default 90 second timeout.",
            "type": "integer"
        },
        "async": {
            "description": "If `true`, the Notecard performs the web request asynchronously, and returns control to the host without waiting for a response from Notehub.",
            "type": "boolean"
        },
        "binary": {
            "description": "If `true`, the Notecard will return the response stored in its binary buffer.",
            "type": "boolean"
        },
        "offset": {
            "description": "Used along with `binary:true` and `max`, sent as a URL parameter to the remote endpoint. Represents the number of bytes to offset the binary payload from 0 when retrieving binary data from the remote endpoint.",
            "type": "integer"
        },
        "max": {
            "description": "Used along with `binary:true` and `offset`, sent as a URL parameter to the remote endpoint. Represents the number of bytes to retrieve from the binary payload segment.",
            "type": "integer"
        },
        "file": {
            "description": "The name of the local-only Database Notefile (`.dbx`) to be used if the web request is issued asynchronously and you wish to store the response.",
            "type": "string"
        },
        "note": {
            "description": "The unique Note ID for the local-only Database Notefile (`.dbx`). Only used with asynchronous web requests (see `file` argument above).",
            "type": "string"
        },
        "cmd": {
            "description": "Command for the Notecard (no response)",
            "const": "web.get"
        },
        "req": {
            "description": "Request for the Notecard (expects response)",
            "const": "web.get"
        }
    },
    "oneOf": [
        {
            "required": [
                "req"
            ],
            "properties": {
                "req": {
                    "const": "web.get"
                }
            }
        },
        {
            "required": [
                "cmd"
            ],
            "properties": {
                "cmd": {
                    "const": "web.get"
                }
            }
        }
    ],
    "additionalProperties": false,
    "annotations": [
        {
            "title": "note",
            "description": "Learn more in this guide on [Sending and Receiving Large Binary Objects](guides-and-tutorials/notecard-guides/sending-and-receiving-large-binary-objects)."
        },
        {
            "title": "warning",
            "description": "The Notecard must have an active connection to Notehub while performing any web.* request. Please [consult this guide](https://dev.blues.io/notecard/notecard-walkthrough/web-transactions/) for more information."
        }
    ],
    "samples": [
        {
            "description": "Performs a simple HTTP or HTTPS GET request and returns the response.",
            "json": "{\"req\": \"web.get\", \"route\": \"weatherInfo\", \"name\": \"/getLatest\"}"
        }
    ]
}
